{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phah0\\\\Desktop\\\\HyperApp\\\\apps\\\\frontend\\\\src\\\\Context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null);\n  let [loading, setLoading] = useState(true);\n  const history = useNavigate();\n  let loginUser = async e => {\n    e.preventDefault();\n    let response = await fetch('http://localhost:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': e.target.username.value,\n        'password': e.target.password.value\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      history('/home');\n    } else {\n      alert('Something went wrong!');\n    }\n  };\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    console.log(\"Logout\");\n    history('/login');\n  };\n  let updateToken = async () => {\n    var _authTokens;\n    authTokens = localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null;\n    console.log(authTokens);\n    let response = await fetch('http://localhost:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': (_authTokens = authTokens) === null || _authTokens === void 0 ? void 0 : _authTokens.refresh\n      })\n    });\n    let data = await response.json();\n    console.log(data);\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n    if (loading) {\n      setLoading(false);\n    }\n  };\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n\n    // let fourMinutes = 1000 * 60 * 4\n    let fourMinutes = 1000 * 500;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"5Rm+Reib+OXGb7m1dQbNFUNwrMk=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwtDecode","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","history","loginUser","e","preventDefault","response","fetch","method","headers","body","stringify","target","username","value","password","data","json","status","access","setItem","alert","logoutUser","removeItem","console","log","updateToken","_authTokens","refresh","contextData","fourMinutes","interval","setInterval","clearInterval","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/phah0/Desktop/HyperApp/apps/frontend/src/Context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from 'react'\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default AuthContext;\r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\r\n    let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null)\r\n    let [loading, setLoading] = useState(true)\r\n\r\n    const history = useNavigate()\r\n\r\n    let loginUser = async (e) => {\r\n        e.preventDefault()\r\n        let response = await fetch('http://localhost:8000/api/token/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ 'username': e.target.username.value, 'password': e.target.password.value })\r\n        })\r\n        let data = await response.json()\r\n\r\n        if (response.status === 200) {\r\n            setAuthTokens(data)\r\n            setUser(jwtDecode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))\r\n            history('/home')\r\n        } else {\r\n            alert('Something went wrong!')\r\n        }\r\n    }\r\n\r\n\r\n    let logoutUser = () => {\r\n        setAuthTokens(null)\r\n        setUser(null)\r\n        localStorage.removeItem('authTokens')\r\n        console.log(\"Logout\")\r\n        history('/login')\r\n    }\r\n\r\n\r\n    let updateToken = async () => {\r\n        authTokens = localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null\r\n        console.log(authTokens)\r\n\r\n        let response = await fetch('http://localhost:8000/api/token/refresh/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ 'refresh': authTokens?.refresh })\r\n        })\r\n\r\n        let data = await response.json()\r\n        console.log(data)\r\n\r\n        if (response.status === 200) {\r\n            setAuthTokens(data)\r\n            setUser(jwtDecode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))\r\n        } else {\r\n            logoutUser()\r\n        }\r\n        if (loading) {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    let contextData = {\r\n        user: user,\r\n        authTokens: authTokens,\r\n        loginUser: loginUser,\r\n        logoutUser: logoutUser,\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (loading) {\r\n            updateToken()\r\n        }\r\n\r\n        // let fourMinutes = 1000 * 60 * 4\r\n        let fourMinutes = 1000 * 500\r\n\r\n        let interval = setInterval(() => {\r\n            if (authTokens) {\r\n                updateToken()\r\n            }\r\n        }, fourMinutes)\r\n        return () => clearInterval(interval)\r\n\r\n    }, [authTokens, loading])\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData} >\r\n            {loading ? null : children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}